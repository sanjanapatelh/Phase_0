# Test Rationale Document

## Test Case: copyTest
Tests the copy operation's permission enforcement mechanism.

**Key Verification Points:**
- Alice creates k1 with herself as reader
- Alice creates k2 with bob in copytos and herself as reader
- Carol attempts to copy from k1 to k2 (should fail - no permissions)
- Alice verifies values remain unchanged

**Expected Results:**
- COPY operation should fail (Carol lacks both copyFrom and copyTo permissions)
- No changes to k1 or k2 values

## Test Case: indirectTest
Tests the validation of indirect references and proper access control.

**Key Verification Points:**
- Alice attempts to create k1 with indirect reference to non-existent k2 (should fail)
- Alice creates k2 with various permissions
- Alice reattempts to create k1 with now-valid indirect reference to k2 (should succeed)
- Alice verifies both keys are readable

**Expected Results:**
- First CREATE fails (indirect reference to non-existent key)
- Second CREATE succeeds (valid indirect reference)
- READ operations succeed for owner with read permissions

## Test Case: indirectLoop
Tests detection and prevention of circular indirect references.

**Key Verification Points:**
- Alice creates k1 and k2 without indirects
- Alice modifies k1 to include indirect reference to k2 (should succeed)
- Alice attempts to modify k2 to include indirect reference to k1 (should fail - circular)

**Expected Results:**
- First MODACL succeeds (no cycle)
- Second MODACL fails (would create k1→k2→k1 cycle)

## Test Case: Owner Not Registered
Tests system behavior with invalid/unauthorized users.

**Key Verification Points:**
- Attempts login with non-existent user "alic" (typo)
- Carol attempts to delete Alice's key (should fail - not owner)

**Expected Results:**
- LOGIN fails with invalid user
- DELETE fails (only owners can delete keys)

## Test Case: DELETE Operation

Tests owner-exclusive delete privileges.

**Key Verification Points:**
- Alice creates a key k1
- Bob attempts to delete k1 (should fail - not owner)
- Alice successfully deletes k1 (should succeed - is owner)
- Attempt to read deleted key fails

**Expected Results:**
- DELETE fails for non-owner
- DELETE succeeds for owner
- READ fails after successful deletion

## Test Case: MODACL Operation

Tests owner-exclusive ACL modification privileges.

**Key Verification Points:**
- Alice creates a key k1 with no readers
- Alice uses MODACL to add herself as reader
- Bob attempts to use MODACL on k1 (should fail - not owner)
- Alice reads k1 (should succeed after MODACL)

**Expected Results:**
- MODACL succeeds for owner
- MODACL fails for non-owner
- READ succeeds after permission addition

## Test Case: REVACL Operation

Tests owner-exclusive ACL review privileges.

**Key Verification Points:**
- Alice creates a key k1 with complex permissions and indirects
- Bob attempts REVACL on k1 (should fail - not owner)
- Alice performs REVACL on k1 (should succeed - is owner)
- REVACL response contains correct direct and effective permission sets

**Expected Results:**
- REVACL fails for non-owner
- REVACL succeeds for owner
- Response includes all direct and computed permission sets

## Implementation Verification

These tests comprehensively verify:

1. **Permission Enforcement:** Operations fail when user lacks required permissions
2. **Indirect Reference Validation:** System validates key existence before allowing indirect references
3. **Cycle Detection:** System prevents circular references that could cause infinite loops
4. **Owner Privileges:** Only owners can perform DELETE, MODACL, and REVACL operations
5. **No Implicit Permissions:** Even owners must be explicitly added to access control lists